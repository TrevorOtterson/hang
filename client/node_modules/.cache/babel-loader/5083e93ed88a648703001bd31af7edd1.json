{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\hang\\\\client\\\\src\\\\components\\\\CreateHang.js\";\nimport React, { Component } from 'react';\nimport './CreateHang.css';\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(value => {\n    value.length > 0 && (valid = false);\n  }); // validate the form being filled out\n\n  Object.values(rest).forEach(value => {\n    value === null && (valid = false);\n  });\n  return valid;\n};\n\nexport default class CreateHang extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log(`\n                --Submitting--\n                Max Participants: ${this.state.maxParticipants}\n                Event: ${this.state.events}\n                Skill Level: ${this.state.skill}\n                Location: ${this.state.location}\n                Time: ${this.state.time}\n                Details: ${this.state.details}\n            `);\n      } else {\n        console.error('FORM INVALID - DISPLAY ERROR');\n      }\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let formErrors = this.state.formErrors;\n      console.log('Name: ', name);\n      console.log('Value: ', value);\n\n      switch (name) {\n        case 'maxParticipants':\n          formErrors.maxParticipants = value.length < 1 ? 'Must type a number of participants.' : '';\n          break;\n\n        case 'events':\n          formErrors.events = value.length < 2 ? 'Must input an event.' : '';\n          break;\n\n        case 'skill':\n          formErrors.skill = value.length < 1 ? 'Must select skill level.' : '';\n          break;\n\n        case 'location':\n          formErrors.location = value.length < 3 ? 'Must input at least 3 characters.' : '';\n          break;\n\n        case 'time':\n          formErrors.time = value.length < 3 ? 'Must input at least 3 characters.' : '';\n          break;\n\n        case 'details':\n          formErrors.details = value.length < 1 ? 'Must input at least 1 characters.' : '';\n          break;\n\n        default:\n          formErrors = {};\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      maxParticipants: null,\n      events: null,\n      skill: null,\n      location: null,\n      time: null,\n      details: null,\n      formErrors: {\n        maxParticipants: '',\n        events: '',\n        skill: '',\n        location: '',\n        time: '',\n        details: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Create Hang\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"maxParticipants\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"maxParticipants\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Max Amount of Participants\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.maxParticipants.length > 0 ? 'error' : null,\n      options: \"Max Participants\",\n      type: \"input\",\n      name: \"maxParticipants\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }), formErrors.maxParticipants.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, formErrors.maxParticipants)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"events\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"events\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, \"Event\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.events.length > 0 ? 'error' : null,\n      placeholder: \"Enter Event\",\n      type: \"text\",\n      name: \"events\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }), formErrors.events.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, formErrors.events)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"skill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"skill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Skill\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.skill.length > 0 ? 'error' : null,\n      placeholder: \"Select Skill Level\",\n      type: \"text\",\n      name: \"skill\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }), formErrors.skill.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, formErrors.skill)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.time.length > 0 ? 'error' : null,\n      placeholder: \"Enter Time\",\n      type: \"time\",\n      name: \"time\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }), formErrors.time.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, formErrors.time)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.location.length > 0 ? 'error' : null,\n      placeholder: \"Enter Location\",\n      type: \"text\",\n      name: \"location\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }), formErrors.location.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, formErrors.location)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, \"Details\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: formErrors.details.length > 0 ? 'error' : null,\n      placeholder: \"Enter Details\",\n      type: \"details\",\n      name: \"details\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }), formErrors.details.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, formErrors.details)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createHang\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, \"Create Hang\")))));\n  }\n\n}","map":{"version":3,"sources":["F:/Project/hang/client/src/components/CreateHang.js"],"names":["React","Component","formValid","formErrors","rest","valid","Object","values","forEach","value","length","CreateHang","constructor","props","handleSubmit","event","preventDefault","state","console","log","maxParticipants","events","skill","location","time","details","error","handleChange","name","target","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './CreateHang.css'\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach(value => {\r\n    value.length > 0 && (valid = false);\r\n  })\r\n\r\n  // validate the form being filled out\r\n  Object.values(rest).forEach(value => {\r\n    value === null && (valid = false);\r\n  })\r\n\r\n  return valid;\r\n}\r\n\r\nexport default class CreateHang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      maxParticipants: null,\r\n      events: null,\r\n      skill: null,\r\n      location: null,\r\n      time: null,\r\n      details: null,\r\n      formErrors: {\r\n        maxParticipants: '',\r\n        events: '',\r\n        skill: '',\r\n        location: '',\r\n        time: '',\r\n        details: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n                --Submitting--\r\n                Max Participants: ${this.state.maxParticipants}\r\n                Event: ${this.state.events}\r\n                Skill Level: ${this.state.skill}\r\n                Location: ${this.state.location}\r\n                Time: ${this.state.time}\r\n                Details: ${this.state.details}\r\n            `);\r\n    }\r\n    else {\r\n      console.error('FORM INVALID - DISPLAY ERROR')\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    console.log('Name: ', name);\r\n    console.log('Value: ', value);\r\n\r\n    switch (name) {\r\n      case 'maxParticipants':\r\n        formErrors.maxParticipants =\r\n          value.length < 1 ? 'Must type a number of participants.' : '';\r\n        break;\r\n      case 'events':\r\n        formErrors.events =\r\n          value.length < 2 ? 'Must input an event.' : '';\r\n        break;\r\n      case 'skill':\r\n        formErrors.skill =\r\n          value.length < 1 ? 'Must select skill level.' : '';\r\n        break;\r\n      case 'location':\r\n        formErrors.location =\r\n          value.length < 3 ? 'Must input at least 3 characters.' : '';\r\n        break;\r\n      case 'time':\r\n        formErrors.time =\r\n          value.length < 3 ? 'Must input at least 3 characters.' : '';\r\n        break;\r\n      case 'details':\r\n        formErrors.details =\r\n          value.length < 1 ? 'Must input at least 1 characters.' : '';\r\n        break;\r\n      default:\r\n        formErrors = {}\r\n        break;\r\n    }\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state))\r\n  }\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <div className='wrapper'>\r\n        <div className='form-wrapper'>\r\n          <h1>Create Hang</h1>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            {/* Max Participants */}\r\n            <div className='maxParticipants'>\r\n              <label htmlFor='maxParticipants'>Max Amount of Participants</label>\r\n              <input\r\n                className={formErrors.maxParticipants.length > 0 ? 'error' : null}\r\n                options='Max Participants'\r\n                type='input'\r\n                name='maxParticipants'\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.maxParticipants.length > 0 && (\r\n                <span className='errorMessage'>{formErrors.maxParticipants}</span>\r\n              )}\r\n            </div>\r\n            {/* Event */}\r\n            <div className='events'>\r\n              <label htmlFor='events'>Event</label>\r\n              <input\r\n                className={formErrors.events.length > 0 ? 'error' : null}\r\n                placeholder='Enter Event'\r\n                type='text'\r\n                name='events'\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.events.length > 0 && (\r\n                <span className='errorMessage'>{formErrors.events}</span>\r\n              )}\r\n            </div>\r\n            {/* Skill */}\r\n            <div className='skill'>\r\n              <label htmlFor='skill'>Skill</label>\r\n              <input\r\n                className={formErrors.skill.length > 0 ? 'error' : null}\r\n                placeholder='Select Skill Level'\r\n                type='text'\r\n                name='skill'\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.skill.length > 0 && (\r\n                <span className='errorMessage'>{formErrors.skill}</span>\r\n              )}\r\n            </div>\r\n            {/* Time */}\r\n            <div className='time'>\r\n              <label htmlFor='time'>Time</label>\r\n              <input\r\n                className={formErrors.time.length > 0 ? 'error' : null}\r\n                placeholder='Enter Time'\r\n                type='time'\r\n                name='time'\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.time.length > 0 && (\r\n                <span className='errorMessage'>{formErrors.time}</span>\r\n              )}\r\n            </div>\r\n            {/* Location */}\r\n            <div className='location'>\r\n              <label htmlFor='location'>Location</label>\r\n              <input\r\n                className={formErrors.location.length > 0 ? 'error' : null}\r\n                placeholder='Enter Location'\r\n                type='text'\r\n                name='location'\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.location.length > 0 && (\r\n                <span className='errorMessage'>{formErrors.location}</span>\r\n              )}\r\n            </div>\r\n            {/* Details */}\r\n            <div className='details'>\r\n              <label htmlFor='details'>Details</label>\r\n              <input\r\n                className={formErrors.details.length > 0 ? 'error' : null}\r\n                placeholder='Enter Details'\r\n                type='details'\r\n                name='details'\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.details.length > 0 && (\r\n                <span className='errorMessage'>{formErrors.details}</span>\r\n              )}\r\n            </div>\r\n            <div className='createHang'>\r\n              <button type='submit'>Create Hang</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}